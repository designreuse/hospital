<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dpc.web.mybatis3.mapper.ArticleRemarkMapper" >
  <resultMap id="BaseResultMap" type="articleRemark" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="articleId" property="articleId" jdbcType="INTEGER" />
    <result column="userId" property="userId" jdbcType="INTEGER" />
    <result column="postTime" property="postTime" jdbcType="TIMESTAMP" />
    <result column="delFlag" property="delFlag" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="articleRemark" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, articleId, userId, postTime, delFlag
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_article_remark
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_article_remark
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="articleRemark" >
    insert into t_article_remark (id, articleId, userId, 
      postTime, delFlag, remark
      )
    values (#{id,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{postTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=TINYINT}, #{remark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="articleRemark" >
    insert into t_article_remark
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="articleId != null" >
        articleId,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="postTime != null" >
        postTime,
      </if>
      <if test="delFlag != null" >
        delFlag,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleId != null" >
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="postTime != null" >
        #{postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="articleRemark" >
    update t_article_remark
    <set >
      <if test="articleId != null" >
        articleId = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="postTime != null" >
        postTime = #{postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        delFlag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="articleRemark" >
    update t_article_remark
    set articleId = #{articleId,jdbcType=INTEGER},
      userId = #{userId,jdbcType=INTEGER},
      postTime = #{postTime,jdbcType=TIMESTAMP},
      delFlag = #{delFlag,jdbcType=TINYINT},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="articleRemark" >
    update t_article_remark
    set articleId = #{articleId,jdbcType=INTEGER},
      userId = #{userId,jdbcType=INTEGER},
      postTime = #{postTime,jdbcType=TIMESTAMP},
      delFlag = #{delFlag,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>