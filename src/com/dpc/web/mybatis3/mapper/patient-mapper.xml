<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dpc.web.mybatis3.mapper.PatientMapper" >
  <resultMap id="BaseResultMap" type="patient" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userId" jdbcType="INTEGER" />
    <result column="weight" property="weight" jdbcType="DOUBLE" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="illProfile" property="illProfile" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="wishMapper" type="wishVO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="patientName" property="patientName" jdbcType="VARCHAR" />
    <result column="patientProfileImageUrl" property="patientProfileImageUrl" jdbcType="VARCHAR" />
    <result column="content" property="wishContent" jdbcType="VARCHAR" />
    <result column="postTime" property="postTime" jdbcType="VARCHAR" />
    <result column="isComeTrue" property="isComeTrue" jdbcType="INTEGER" />
    <collection property="wishRemarkList" ofType="wishRemark">
   		<result column="remarkUserName" property="remarkUserName" jdbcType="VARCHAR" />
   		<result column="remarkProfileImage" property="remarkProfileImage" jdbcType="VARCHAR" />
   		<result column="remark" property="remark" jdbcType="VARCHAR" />
   		<result column="remarkTime" property="remarkTime" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  <resultMap id="patientVOMapper" type="patientVO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="agender" property="agender" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="registerTime" property="registerTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userId, weight, score, illProfile
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_patient
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_patient
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="patient" >
    insert into t_patient (id, userId, weight, 
      score, illProfile)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{weight,jdbcType=DOUBLE}, 
      #{score,jdbcType=INTEGER}, #{illProfile,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="patient" useGeneratedKeys="true" keyProperty="id">
    insert into t_patient
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        userId,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="illProfile != null" >
        illProfile,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=DOUBLE},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="illProfile != null" >
        #{illProfile,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="patient" >
    update t_patient
    <set >
      <if test="userId != null" >
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=DOUBLE},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="illProfile != null" >
        illProfile = #{illProfile,jdbcType=VARCHAR},
      </if>
      <if test="hasBind != null" >
        hasBind = #{hasBind},
      </if>
    </set>
    <where>
    	<if test="id != null">id = #{id,jdbcType=INTEGER}</if>
    	<if test="userId != null">userId = #{userId,jdbcType=INTEGER}</if>
    </where>
  </update>
  <update id="updateByPrimaryKey" parameterType="patient" >
    update t_patient
    set userId = #{userId,jdbcType=INTEGER},
      weight = #{weight,jdbcType=DOUBLE},
      score = #{score,jdbcType=INTEGER},
      illProfile = #{illProfile,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getProfile" parameterType="java.lang.Integer" resultType="patientVO">
  		select 
  			u.id as userId,
  			u.username,
  			p.illProfile,
  			date_format(u.registerTime, '%Y-%m-%d %H:%i:%s') as registerTime,
  			p.score,
			u.name,
			u.mobile,
			(CASE u.agender WHEN 1 THEN "男" WHEN "2" THEN "女" END) AS agender,
			u.birthday,
			p.weight,
			u.profileImageUrl
		from 
  		t_user u left join t_patient p on u.id=p.userId
  		where u.id=#{0} and registerType=2
  </select>
  
  <insert id="addWish" parameterType="wish" useGeneratedKeys="true" keyProperty="id">
  	 insert into p_wish
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        userId,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="postTime != null" >
        postTime,
      </if>
      <if test="delFlag != null" >
        delFlag,
      </if>
      <if test="isComeTrue != null" >
        isComeTrue,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content},
      </if>
      <if test="postTime != null" >
        #{postTime},
      </if>
      <if test="delFlag != null" >
        #{delFlag},
      </if>
      <if test="isComeTrue != null" >
        #{isComeTrue},
      </if>
    </trim>
  </insert>
  
  <update id="updateWish" parameterType="wish">
  	 update p_wish 
  	 <set>
  	 	<if test="isComeTrue != null">isComeTrue = #{isComeTrue}</if>
  	 </set>
  	 <where>
  	 	<if test="id != null">id = #{id}</if>
  	 </where>
  </update>
  
  
  <insert id="addWishRemark" parameterType="wishRemark" useGeneratedKeys="true" keyProperty="id">
  	 insert into p_wish_remark
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="wishId != null" >
        wishId,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="remarkTime != null" >
        remarkTime,
      </if>
      <if test="delFlag != null" >
        delFlag,
      </if>
      <if test="userId != null" >
        userId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="wishId != null" >
        #{wishId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark},
      </if>
      <if test="remarkTime != null" >
        #{remarkTime},
      </if>
      <if test="delFlag != null" >
        #{delFlag},
      </if>
      <if test="userId != null" >
        #{userId},
      </if>
    </trim>
  </insert>
  
  <select id="getWishListByUserId" parameterType="java.lang.Integer" resultMap="wishMapper">
  		select 
			a.id,a.patientName,a.patientProfileImageUrl,a.content,a.postTime,a.isComeTrue,
			b.remarkUserName,b.remarkProfileImage,b.remark,b.remarkTime
		 from (select w.id id,w.content,w.postTime,w.isComeTrue,u.name patientName,u.profileImageUrl patientProfileImageUrl from p_wish w inner join t_user u on w.userId=u.id where w.delFlag=0 and u.id=#{0})	a 
		 left join (select wr.wishId,user.name remarkUserName,user.profileImageUrl remarkProfileImage,wr.remark,wr.remarkTime from p_wish_remark wr left join t_user user on wr.userId=user.id) b on a.id=b.wishId 
  </select>
  
   <select id="getPatientListWithPager" parameterType="patientVO" resultType="patientVO">
 	select 
 		p.id,
 		u.id as userId,
 	 	u.username,
 	 	u.name,
 	 	date_format(u.registerTime, '%Y-%m-%d %k:%i:%s') as registerTime,
 	 	u.agender,
 	 	u.mobile,
 	 	p.score,
 	 	date_format(u.birthday, '%Y-%m-%d') birthday
	from t_user u left join t_patient p on u.id=p.userId 
  	<where>
  		registerType = 2
 	 	<if test="patient.name != null">
 	 		and u.name = #{patient.name}
 	 	</if>
 	 	<if test="patient.username != null">
 	 		and u.username = #{patient.username}
 	 	</if>
 	 	<if test="patient.startDate != null and patient.endDate != null">
 	 		and u.registerTime >= date_format(#{patient.startDate}, '%Y-%m-%d 00:00:00') and date_format(#{patient.endDate}, '%Y-%m-%d 23:59:59') >= u.registerTime
 	 	</if>
 	 	<if test="patient.mobile != null">
 	 		and u.mobile = #{mobile}
 	 	</if>
 	 	<if test="patient.startScore != null and patient.endScore != null">
 	 		and p.score >= #{patient.startScore} and #{patient.endScore} >= p.score
 	 	</if>
 	</where>
 	order by u.registerTime
 	limit #{start},#{limit}
 </select>
 
 <select id="getAllPatientCount" parameterType="patientVO" resultType="java.lang.Integer">
 	select count(*)
	from t_user u left join t_patient p on u.id=p.userId 
  	<where>
 	 	<if test="patient.name != null">
 	 		and u.name = #{patient.name}
 	 	</if>
 	 	<if test="patient.startDate != null and patient.endDate != null">
 	 		and u.registerTime >= #{patient.startDate} and #{patient.endDate} >= u.registerTime
 	 	</if>
 	 	<if test="patient.mobile != null">
 	 		and u.mobile = #{mobile}
 	 	</if>
 	 	<if test="patient.startScore != null and patient.endScore != null">
 	 		and p.score >= #{patient.startScore} and #{patient.endScore} >= p.score
 	 	</if>
 	</where>
 </select>
  
 <select id="hasRelationshipWithDoctor" parameterType="doctorPatientRelation" resultType="java.lang.Integer">
 	select  count(*) from t_doctor_patient 
 	<where>
 		doctorId = #{doctorId} and patientId = #{patientId} 
 		<if test="checked == -1">
 			and checked = 0
 		</if>
 		<if test="checked != -1">
 			and (checked = 1 or checked = 4)
 		</if>
 		<if test="relation != null">
 			and relation = #{relation}
 		</if>
 	</where>
 </select>
 <select id="hasBindWithDoctor" parameterType="java.lang.Integer" resultType="java.lang.Integer">
 	select  count(*) from t_doctor_patient 
 	where patientId = #{0} and (checked = 1 or checked = 4) and relation = 1
 </select>
  
  <insert id="patientBindDoctor" parameterType="doctorPatientRelation" useGeneratedKeys="true" keyProperty="id">
  	insert into t_doctor_patient(doctorId,patientId,relation,checked,patientName,bindTime) values(#{doctorId},#{patientId},#{relation},#{checked},#{patientName},#{bindTime})
  </insert>
  
  <select id="getWishList" parameterType="wish" resultType="wish">
 	select 
	 	w.id,
		w.userId,
		u.name patientName,
		w.content,
		date_format(w.postTime, '%Y-%m-%d %k:%i:%s') as postTime,
		w.isComeTrue,
 		u.mobile,
 		wr.remark
 	from p_wish w left join t_user u on w.userId=u.id left join p_wish_remark wr on w.id=wr.wishId
 	<where>
 		<if test="wish.patientName !=null">u.name = #{wish.patientName}</if>
 		<if test="wish.isComeTrue !=null"> and isComeTrue = #{wish.isComeTrue}</if>
 		<if test="wish.mobile !=null"> and u.mobile = #{wish.mobile}</if>
 	</where>
	limit #{start},#{limit}
 </select>
  <select id="getAllWishCount" parameterType="wish" resultType="java.lang.Integer">
 	select count(*)
 	from p_wish w left join t_user u on w.userId=u.id
 	<where>
 		<if test="wish.patientName !=null">u.name = #{wish.patientName}</if>
 		<if test="wish.isComeTrue !=null"> and isComeTrue = #{wish.isComeTrue}</if>
 		<if test="wish.mobile !=null"> and u.mobile = #{wish.mobile}</if>
 	</where>
 </select>
  <select id="getWishDetail" parameterType="java.lang.Integer" resultType="wish">
 	select 
		u.name patientName,
		u.mobile,
		date_format(w.postTime, '%Y-%m-%d %k:%i') as postTime,
		w.isComeTrue,
		w.content,
		wr.remark
 	from p_wish w left join t_user u on w.userId=u.id left join p_wish_remark wr on w.id=wr.wishId
 	where w.id = #{0}
 </select>
 
  <select id="getWishListById" parameterType="java.lang.Integer" resultType="wish">
 	select * from p_wish  where id = #{0}
 </select>
 
 <select id="getDiscoveryList" parameterType="discovery" resultType="discovery">
 	select 
	 	d.id,
	 	u,name,
	 	d.content,
	 	date_format(d.postTime, '%Y-%m-%d %k:%i') as postTime,
	 	di.imageUrl
 	from p_discovery d left join t_user u on d.userId=u.id left join p_discovery_image di on d.id=di.discoveryId 
 	<where>
 		<if test="discovery.name !=null">u.name = #{discovery.name}</if>
 		<if test="discovery.postTime !=null"> and d.postTime = #{discovery.postTime}</if>
 	</where>
	limit #{start},#{limit}
 </select>
 
 <select id="getAllDiscoveryCount" parameterType="discovery" resultType="java.lang.Integer">
 	select count(*)
 	from p_discovery d left join t_user u on d.userId=u.id 
 	<where>
 		<if test="discovery.name !=null">u.name = #{discovery.name}</if>
 		<if test="discovery.postTime !=null"> and d.postTime = #{discovery.postTime}</if>
 	</where>
 </select>
 
 <select id="getDiscoveryById" parameterType="java.lang.Integer" resultType="discovery">
 	select * from p_discovery where id = #{0} and delFlag = 0
 </select>
 
 <update id="updateDiscovery" parameterType="discovery">
 	update p_discovery
    <set >
      <if test="remarkCount != null" >
        remarkCount = #{remarkCount,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        delFlag = #{delFlag},
      </if>
    </set>
    <where>
    	<if test="id != null">id = #{id,jdbcType=INTEGER}</if>
    </where>
 </update>
 
 <select id="getMyDoctors" parameterType="java.lang.Integer" resultType="doctor">
 	select 
		d.id,
		d.userId,
 		d.hospital,
		u.name,
		u.profileImageUrl,
		d.department,
		dp.relation
    from t_doctor_patient dp inner join t_doctor d on dp.doctorId=d.userId  LEFT JOIN t_user u on d.userId=u.id
	where dp.patientId = #{0} and dp.checked in (1,4)
 </select>
 <select id="getMyDoctorDetail" parameterType="java.lang.Integer" resultType="doctor">
 	 	select 
			u.id,
			d.department,
			d.technicalTitle,
			d.teachingTitle,
			d.hospital,
			u.name,
		    u.profileImageUrl,
			d.address,
			c.patientCount
		from t_doctor d INNER JOIN t_user u on d.userid=u.id
		LEFT JOIN (select doctorId,count(*) patientCount from t_doctor_patient where doctorId = #{0} and checked=1) c on d.userId= c.doctorId
		where d.userId = #{0}
 </select>
 
 <delete id="unBindRelation" parameterType="java.lang.Integer">
 	delete from t_doctor_patient where doctorId = #{1} and patientId = #{0}
 </delete>
 
 <select id="getMydoctorAnnouncements" parameterType="java.lang.Integer" resultType="announcement">
	 	SELECT 
			u.name,
			u.profileImageUrl imageUrl,
			date_format(b.postTime, '%Y-%m-%d %k:%i:%s') as postTime,
			b.content
		from t_doctor_patient  a INNER JOIN p_announcement b on a.doctorId=b.doctorId
		LEFT JOIN t_user u on u.id=a.doctorId
		where a.patientId = #{0} and a.relation in (1,2) and a.checked in (1,4)
		ORDER BY b.postTime DESC
 </select>
 
 <select id="getDoctorPatientRelationById" parameterType="java.lang.Integer" resultType="doctorPatientRelation">
 		select * from t_doctor_patient where id=#{0}
 </select>
 <select id="getAllPatient" resultMap="patientVOMapper">
 	SELECT 
		a.score,
		b.`name`,
		b.username,
		(case b.agender when 1 then '男' else '女' end) agender,
		date_format(b.birthday, '%Y-%m-%d') as birthday,
		b.mobile,
		date_format(b.registerTime, '%Y-%m-%d %k:%i:%s') as registerTime
	 from t_patient a LEFT JOIN t_user b on a.userId=b.id where b.registerType=2
 </select>
 
 <select id="getBindDoctors" parameterType="java.lang.Integer" resultType="doctorPatientRelation">
 	select * from t_doctor_patient where patientId=#{0} and checked = 1
 </select>
 
 <update id="updateDoctorPatientRelation" parameterType="doctorPatientRelation">
 	update t_doctor_patient 
 	<set>
 		<if test="remark != null">remark = #{remark}</if>
 	</set>
 	<where>
 		<if test="doctorId != null">doctorId = #{doctorId}</if>
 		<if test="patientId != null">and patientId = #{patientId}</if>
 	</where>
 </update>
 
 <select id="getPatientById" parameterType="java.lang.Integer" resultType="patient">
		 select * from t_patient where userId = #{0}	
 </select>

 
</mapper>